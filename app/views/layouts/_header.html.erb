<% case try(:current_namespace) %>
<% when 'candidate_interface' %>
  <%= render(HeaderComponent.new(
              classes: "app-header--#{HostingEnvironment.environment_name} app-header--full-border",
              service_name: service_name,
              service_link: service_link,
            )) %>
  <%= render PhaseBannerComponent.new(no_border: current_candidate.present?) %>
  <% if current_candidate %>
    <% sign_out_path = FeatureFlag.active?(:one_login_candidate_sign_in) ? auth_one_login_sign_out_path : candidate_interface_sign_out_path %>
    <%= render(PrimaryNavigationComponent.new(
                items: NavigationItems.candidate_primary_navigation(current_candidate:, current_controller: controller),
                items_right: [NavigationItems::NavigationItem.new('Sign out', sign_out_path)],
              )) %>
  <% end %>
<% when 'support_interface' %>
  <%= render(HeaderComponent.new(
        classes: "app-header--#{HostingEnvironment.environment_name} app-header--full-border app-header--wide-logo",
        product_name: service_name,
        homepage_url: service_link,
        service_link: service_link,
        phase_tag: true,
        navigation_items: NavigationItems.for_support_account_nav(try(:current_support_user)),
        navigation_classes: 'govuk-header__navigation--end',
      )) %>
  <%= render(PrimaryNavigationComponent.new(
        items: NavigationItems.for_support_primary_nav(try(:current_support_user), controller),
      )) %>
  <%= yield(:navigation) if content_for?(:navigation) %>
<% when 'provider_interface' %>
  <%= render(HeaderComponent.new(
      classes: "app-header--#{HostingEnvironment.environment_name} app-header--full-border app-header--wide-logo",
      product_name: service_name,
      homepage_url: service_link,
      service_link: service_link,
      navigation_items: NavigationItems.for_provider_account_nav(try(:current_provider_user), controller, performing_setup: @provider_setup&.pending?),
      navigation_classes: 'govuk-header__navigation--end',
    )) %>
  <% if controller.controller_name == 'start_page' %>
    <%= render(PhaseBannerComponent.new(
        feedback_link: ProviderInterface::FEEDBACK_LINK,
      )) %>
  <% elsif controller.controller_name.in? %w[sessions provider_agreements] %>
    <%= render(PhaseBannerComponent.new(
        feedback_link: ProviderInterface::FEEDBACK_LINK,
      )) %>
  <% else %>
    <%= render(PhaseBannerComponent.new(
        no_border: true,
        feedback_link: ProviderInterface::FEEDBACK_LINK,
      )) %>
    <%= render(PrimaryNavigationComponent.new(
        items: NavigationItems.for_provider_primary_nav(try(:current_provider_user), controller, performing_setup: @provider_setup&.pending?),
      )) %>
  <% end %>
<% when 'vendor_api_docs' %>
  <%= render(HeaderComponent.new(
      classes: "app-header--#{HostingEnvironment.environment_name} app-header--full-border app-header--wide-logo",
      product_name: service_name,
      service_link: service_link,
      phase_tag: true,
    )) %>
  <%= render(PrimaryNavigationComponent.new(
      items: NavigationItems.for_vendor_api_docs(controller),
    )) %>
<% when 'register_api_docs' %>
  <%= render(HeaderComponent.new(
      classes: "app-header--#{HostingEnvironment.environment_name} app-header--full-border app-header--wide-logo",
      product_name: service_name,
      service_link: service_link,
      phase_tag: true,
    )) %>
  <%= render(PrimaryNavigationComponent.new(
      items: NavigationItems.for_register_api_docs(controller),
    )) %>
<% else %>
  <% components_url = '/rails/view_components' if request.path.match(/^\/rails\/view_components/) %>
  <% components_name = 'ViewComponent Previews' if request.path.match(/^\/rails\/view_components/) %>
  <%= render(HeaderComponent.new(
    classes: "app-header--#{HostingEnvironment.environment_name}",
    service_name: components_name || try(:service_name),
    service_link: components_url || try(:service_link),
  )) %>
  <%= render PhaseBannerComponent.new %>
<% end %>
