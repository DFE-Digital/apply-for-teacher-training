<% content_for :title, 'Search validation errors' %>

<% content_for :before_content do %>
  <%= breadcrumbs({
    Performance: support_interface_performance_path,
    'Validation errors': support_interface_validation_errors_path,
    Provider: support_interface_validation_errors_provider_path,
    'Search validation errors': nil,
  }) %>
<% end %>

<p class="govuk-body">
  <% if params[:id] %>
    Showing validation error #<%= params[:id] %>
  <% else %>
    Showing errors on
    <strong><%= params[:attribute] ? "the #{params[:attribute].humanize} field" : 'all fields' %></strong>
    in <strong><%= params[:form_object] ? params[:form_object].demodulize.underscore.humanize : 'all forms' %></strong>
    by <strong><%= params[:user_id] ? "user ##{params[:user_id]}" : 'all users' %></strong>.
  <% end %>
</p>

<% @validation_errors.each do |validation_error| %>
  <section class="app-summary-card govuk-!-margin-bottom-6">
    <%= render(SummaryCardHeaderComponent.new(title: "Validation error #{govuk_link_to("##{validation_error.id}", support_interface_validation_errors_provider_search_path(id: validation_error.id))}".html_safe)) do %>
      <div class="app-summary-card__actions">
        <%= validation_error.created_at.to_fs(:govuk_date_and_time) %>

        <% if validation_error.user_id %>
          by user <%= govuk_link_to "##{validation_error.user_id}", support_interface_validation_errors_provider_search_path(user_id: validation_error.user_id) %>
        <% end %>
      </div>
    <% end %>

    <div class="app-summary-card__body">
      <table class="govuk-table">
        <% validation_error.details.each do |attribute, details| %>
          <% details['messages'].each do |message| %>
            <tr class="govuk-table__row">
              <td class="govuk-table__cell govuk-!-width-one-half">
                <h3 class="govuk-heading-s govuk-!-margin-bottom-0">
                  <span class="govuk-!-font-weight-regular"><%= govuk_link_to validation_error.form_object.demodulize.underscore.humanize, support_interface_validation_errors_provider_search_path(form_object: validation_error.form_object) %>:</span>
                  <%= govuk_link_to attribute.humanize, support_interface_validation_errors_provider_search_path(form_object: validation_error.form_object, attribute: attribute) %>
                </h3>
                <p class="govuk-body govuk-!-margin-bottom-0"><%= message %></p>
              </td>
              <td class="govuk-table__cell">
                <% if details['value'].blank? %>
                  <%= govuk_tag(text: 'Empty', colour: 'grey') %>
                <% else %>
                  <code><%= details['value'].inspect %></code>
                <% end %>
              </td>
            </tr>
          <% end %>
        <% end %>
      </table>
    </div>
  </section>
<% end %>

<%= render(PaginatorComponent.new(scope: @validation_errors)) %>
