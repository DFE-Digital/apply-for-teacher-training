<% if structured_degree_data? %>
  <% content_for :title, title_with_error_prefix(t(".title.#{@model.degree_level}"), @model.errors.any?) %>

  <%= form_with model: @model, url: candidate_interface_degree_type_path, scope: :candidate_interface_degree_form do |form| %>
  <%= form.govuk_error_summary %>
  <%= form.govuk_radio_buttons_fieldset :type, legend: { text: t(".label.type_of_level.#{@model.degree_level}"), tag: 'h1', size: 'l' } do %>
    <% find_degree_type_options.each_with_index do |type, index| %>
      <%= form.govuk_radio_button :type, type[:name], label: { text: name_and_abbr(type) }, link_errors: index.zero? %>
    <% end %>

      <%= form.govuk_radio_divider %>

      <%= form.govuk_radio_button :type, 'other', label: { text: t(".label.other.#{@model.degree_level}") } do %>
        <%= render DfE::Autocomplete::View.new(
          form,
          attribute_name: :other_type,
          form_field: form.govuk_select(
          :other_type,
          options_for_select(dfe_autocomplete_options(choose_degree_types(degree_level.to_sym), synonyms_fields: %i[abbreviation match_synonyms], append: :abbreviation), form.object.other_type),
          label: { text: t('.degree_type') },
          hint: { text: t(".hint.other.#{@model.degree_level}") },
        ),
        ) %>
      <% end %>
    <% end %>
    <%= form.govuk_submit t('save_and_continue') %>
  <% end %>
  <% else %>
    <% content_for :title, title_with_error_prefix(t('.title.other'), @model.errors.any?) %>

    <%= form_with model: @model, url: candidate_interface_degree_type_path, scope: :candidate_interface_degree_form do |form| %>
      <%= form.govuk_error_summary %>
      <%= form.govuk_text_field :type, hint: { text: t('.hint.other.other') }, label: { text: t('.label.type_of_level.other'), tag: 'h1', size: 'l' } %>
      <%= form.govuk_submit t('save_and_continue') %>
  <% end %>
<% end %>
