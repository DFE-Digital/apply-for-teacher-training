{
  "ignored_warnings": [
    {
      "warning_type": "Unscoped Find",
      "warning_code": 82,
      "fingerprint": "0e7dc374e358d2d93a89606f5d97a7bf692d45c6f417f9dbbc62425d1488dd55",
      "check_name": "UnscopedFind",
      "message": "Unscoped call to `Pool::Invite#find_by`",
      "file": "app/controllers/provider_interface/candidate_pool/draft_invites_controller.rb",
      "line": 69,
      "link": "https://brakemanscanner.org/docs/warning_types/unscoped_find/",
      "code": "Pool::Invite.find_by(:id => params.expect(:id), :provider_id => current_provider_user.provider_ids, :status => :draft)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProviderInterface::CandidatePool::DraftInvitesController",
        "method": "invite"
      },
      "user_input": "params.expect(:id)",
      "confidence": "Weak",
      "cwe_id": [
        285
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "28d64e5d66c0dce5bb41ca5b85a1751bdd7190b07aa55b1af003c090e7f8863a",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/services/notifications_list.rb",
      "line": 26,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "application_choice.provider.provider_users.or(application_choice.accredited_provider.provider_users).joins(:notification_preferences).where(\"provider_user_notifications.#{{ :application_received => ([:application_submitted]), :application_withdrawn => ([:application_withdrawn]), :application_rejected_by_default => ([:application_rejected_by_default]), :offer_accepted => ([:offer_accepted, :unconditional_offer_accepted]), :offer_declined => ([:declined, :declined_by_default]), :reference_received => ([:reference_received]) }.select do\n k if event.in?(v)\n end.keys.first}\" => true)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "NotificationsList",
        "method": "s(:self).for"
      },
      "user_input": "{ :application_received => ([:application_submitted]), :application_withdrawn => ([:application_withdrawn]), :application_rejected_by_default => ([:application_rejected_by_default]), :offer_accepted => ([:offer_accepted, :unconditional_offer_accepted]), :offer_declined => ([:declined, :declined_by_default]), :reference_received => ([:reference_received]) }.select do\n k if event.in?(v)\n end.keys.first",
      "confidence": "Weak",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "3010d2e6a4a12eb1df4f45e945cee8549edd95be09e6977f117f07841e50af42",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/services/data_migrations/populate_section_completed_ats.rb",
      "line": 15,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute(\"WITH boolean_updates AS (\\n  SELECT DISTINCT ON (auditable_id) auditable_id, created_at\\n  FROM audits\\n  WHERE auditable_type = 'ApplicationForm'\\n  AND (\\n    audited_changes->'#{field}_completed' = '[false,true]'\\n    OR audited_changes->'#{field}_completed' = '[null,true]'\\n  )\\n  ORDER BY auditable_id, created_at DESC\\n)\\nUPDATE application_forms\\nSET #{field}_completed_at = boolean_updates.created_at\\nFROM boolean_updates\\nWHERE application_forms.id = boolean_updates.auditable_id\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "DataMigrations::PopulateSectionCompletedAts",
        "method": "change"
      },
      "user_input": "field",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "3299495e319be7f1fe6ef43672dcb25e2c3fa3e7f5f953d24e18344b4be0777f",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/support_interface/provider_onboarding_monitor.rb",
      "line": 27,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "target_providers.select(\"providers.*, MAX(last_decisions.last_decision) as last_decision\").joins(\"INNER JOIN (#{applications_with_last_decision_sql}) as last_decisions ON providers.id = ANY(last_decisions.provider_ids)\").group(\"providers.id\").having(\"MAX(last_decisions.last_decision) < ('#{pg_now}'::TIMESTAMPTZ - interval '7 days') OR MAX(last_decisions.last_decision) IS NULL\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "SupportInterface::ProviderOnboardingMonitor",
        "method": "no_decisions_in_last_7_days"
      },
      "user_input": "pg_now",
      "confidence": "Weak",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "384f45931b605f924ee51295a701f7c00e52715b7437d1f864bda1271c150af7",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/components/provider_interface/provider_partner_permission_breakdown_component.rb",
      "line": 43,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "provider.ratifying_provider_permissions.providers_with_current_cycle_course.where(\"ratifying_provider_can_#{permission}\" => permission_applies)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProviderInterface::ProviderPartnerPermissionBreakdownComponent",
        "method": "training_provider_partner_ids_where"
      },
      "user_input": "permission",
      "confidence": "Weak",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "480d6a160b846a6824b4c783722aecb352a066aaa3b4313d1ee7adfaf7fb6311",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/services/data_migrations/set_missing_section_completed_at_timestamps.rb",
      "line": 11,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ApplicationForm.where(:\"#{field}_completed\" => true, :\"#{field}_completed_at\" => nil).where.not(:previous_application_form_id => nil).update_all(\"#{field}_completed_at = created_at\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "DataMigrations::SetMissingSectionCompletedAtTimestamps",
        "method": "change"
      },
      "user_input": "field",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "Unscoped Find",
      "warning_code": 82,
      "fingerprint": "62e26a4d37b84dd77184bc5980c9bc70a9b59f1274745a6f4f2dfe23b7d605ec",
      "check_name": "UnscopedFind",
      "message": "Unscoped call to `Pool::Invite#find_by`",
      "file": "app/controllers/provider_interface/candidate_pool/provider_invite_messages_controller.rb",
      "line": 71,
      "link": "https://brakemanscanner.org/docs/warning_types/unscoped_find/",
      "code": "Pool::Invite.find_by(:id => params.expect(:draft_invite_id), :provider_id => current_provider_user.provider_ids, :status => :draft)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProviderInterface::CandidatePool::ProviderInviteMessagesController",
        "method": "invite"
      },
      "user_input": "params.expect(:draft_invite_id)",
      "confidence": "Weak",
      "cwe_id": [
        285
      ],
      "note": ""
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "783f66b9e6119c7b65c794a57f29b291e256d49267c511bff375d031ef83ea96",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/one_login_controller.rb",
      "line": 70,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(logout_one_login((Current.session.id_token_hint or SessionError.find_by(:id => session[:session_error_id]).id_token_hint)), :allow_other_host => true)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "OneLoginController",
        "method": "sign_out"
      },
      "user_input": "Current.session.id_token_hint",
      "confidence": "Weak",
      "cwe_id": [
        601
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "7ebec2ba1f928826a941998c744411d55731a6eeb19dc1b1a406b3fb3a19b330",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/support_interface/vendor_api_monitor.rb",
      "line": 31,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connected.select(\"last_syncs.last_sync as last_sync, vendor_id\").joins(\"LEFT JOIN (#{VendorAPIRequest.successful.syncs.select(\"provider_id, MAX(vendor_api_requests.created_at) as last_sync\").group(\"provider_id\").to_sql}) last_syncs on last_syncs.provider_id = providers.id\").where(\"last_sync < ('#{pg_now}'::TIMESTAMPTZ - interval '24 hours') OR last_sync IS NULL\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "SupportInterface::VendorAPIMonitor",
        "method": "no_sync_in_24h"
      },
      "user_input": "pg_now",
      "confidence": "Weak",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "Unscoped Find",
      "warning_code": 82,
      "fingerprint": "9e900042a97ec79a46b47b5c58b9adfa1391693e495a89dbf455607b3b2603d8",
      "check_name": "UnscopedFind",
      "message": "Unscoped call to `ProviderRelationshipPermissions#find`",
      "file": "app/controllers/provider_interface/organisation_permissions_controller.rb",
      "line": 49,
      "link": "https://brakemanscanner.org/docs/warning_types/unscoped_find/",
      "code": "ProviderRelationshipPermissions.find(params[:id])",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProviderInterface::OrganisationPermissionsController",
        "method": "set_up_relationship_objects"
      },
      "user_input": "params[:id]",
      "confidence": "Weak",
      "cwe_id": [
        285
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "a5a84261000bc24d5d1ff692d262b771f7f2bce9cedd058f1db85cb2b94f0870",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/support_interface/vendor_api_monitor.rb",
      "line": 55,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "VendorAPIRequest.select(\"provider_id, COUNT(vendor_api_requests.id) as count\").where(\"vendor_api_requests.created_at > ('#{pg_now}'::TIMESTAMPTZ - interval '7 days')\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "SupportInterface::VendorAPIMonitor",
        "method": "providers_with_errors"
      },
      "user_input": "pg_now",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "Unscoped Find",
      "warning_code": 82,
      "fingerprint": "a6606f49b3e0561d2e82c86bda143db35a2f9ba55ad95a6d6a121b5195890d43",
      "check_name": "UnscopedFind",
      "message": "Unscoped call to `Pool::Invite#find_by`",
      "file": "app/controllers/provider_interface/candidate_pool/publish_invites_controller.rb",
      "line": 39,
      "link": "https://brakemanscanner.org/docs/warning_types/unscoped_find/",
      "code": "Pool::Invite.find_by(:id => params.expect(:draft_invite_id), :provider_id => current_provider_user.provider_ids, :status => :draft)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProviderInterface::CandidatePool::PublishInvitesController",
        "method": "invite"
      },
      "user_input": "params.expect(:draft_invite_id)",
      "confidence": "Weak",
      "cwe_id": [
        285
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "a69c2ff3682a5ad58bacee0f45b507c323b72f778786686538a546d32c9cbf6b",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/support_interface/vendor_api_monitor.rb",
      "line": 38,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connected.select(\"last_syncs.last_sync as last_sync, vendor_id\").joins(\"LEFT JOIN (#{VendorAPIRequest.successful.syncs.select(\"provider_id, MAX(vendor_api_requests.created_at) as last_sync\").group(\"provider_id\").to_sql}) last_syncs on last_syncs.provider_id = providers.id\").where(\"last_sync < ('#{pg_now}'::TIMESTAMPTZ - interval '7 days') OR last_sync IS NULL\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "SupportInterface::VendorAPIMonitor",
        "method": "no_sync_in_7d"
      },
      "user_input": "pg_now",
      "confidence": "Weak",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "b66efa91e04d1b02e4521f8a617809adda7a0dc470daa75fa2e22770d8e0c538",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/services/notifications_list.rb",
      "line": 23,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "application_choice.provider.provider_users.joins(:notification_preferences).where(\"provider_user_notifications.#{{ :application_received => ([:application_submitted]), :application_withdrawn => ([:application_withdrawn]), :application_rejected_by_default => ([:application_rejected_by_default]), :offer_accepted => ([:offer_accepted, :unconditional_offer_accepted]), :offer_declined => ([:declined, :declined_by_default]), :reference_received => ([:reference_received]) }.select do\n k if event.in?(v)\n end.keys.first}\" => true)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "NotificationsList",
        "method": "s(:self).for"
      },
      "user_input": "{ :application_received => ([:application_submitted]), :application_withdrawn => ([:application_withdrawn]), :application_rejected_by_default => ([:application_rejected_by_default]), :offer_accepted => ([:offer_accepted, :unconditional_offer_accepted]), :offer_declined => ([:declined, :declined_by_default]), :reference_received => ([:reference_received]) }.select do\n k if event.in?(v)\n end.keys.first",
      "confidence": "Weak",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "baee8f95666b7ed7fee05665c97f0ba1a818683e958f940ccf8c7ffd980fdb64",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/components/provider_interface/provider_partner_permission_breakdown_component.rb",
      "line": 50,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "provider.training_provider_permissions.providers_with_current_cycle_course.where(\"training_provider_can_#{permission}\" => permission_applies)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProviderInterface::ProviderPartnerPermissionBreakdownComponent",
        "method": "ratifying_provider_partner_ids_where"
      },
      "user_input": "permission",
      "confidence": "Weak",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "c72cb22d421486df577321b15e768add7cdaec0bc32aeb44db6d5e996a5f7705",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/support_interface/vendor_api_monitor.rb",
      "line": 45,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connected.select(\"last_decisions.last_decision as last_decision, vendor_id\").joins(\"LEFT JOIN (#{VendorAPIRequest.successful.decisions.select(\"provider_id, MAX(vendor_api_requests.created_at) as last_decision\").group(\"provider_id\").to_sql}) last_decisions on last_decisions.provider_id = providers.id\").where(\"last_decision < ('#{pg_now}'::TIMESTAMPTZ - interval '7 days') OR last_decision IS NULL\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "SupportInterface::VendorAPIMonitor",
        "method": "no_decisions_in_7d"
      },
      "user_input": "pg_now",
      "confidence": "Weak",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "dec17808bfcb16d7a790ec0a75640bf5735beda9cb32f1c5c26d09eedaba85a5",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/support_interface/vendor_api_monitor.rb",
      "line": 54,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "VendorAPIRequest.errors.select(\"provider_id, COUNT(vendor_api_requests.id) as count\").where(\"vendor_api_requests.created_at > ('#{pg_now}'::TIMESTAMPTZ - interval '7 days')\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "SupportInterface::VendorAPIMonitor",
        "method": "providers_with_errors"
      },
      "user_input": "pg_now",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": ""
    }
  ],
  "brakeman_version": "7.0.2"
}
