---
openapi: 3.0.0
info:
  version: v1
  title: Apply API
  contact:
    name: DfE
    email: becomingateacher@digital.education.gov.uk
  description: |
    API for DfE’s Apply for teacher training service.
    Endpoints with the `/applications` prefix are considered stable.
    Experimental endpoints prefixed with `/test-data` may change or be removed.
servers:
- description: Sandbox (test environment for vendors)
  url: https://sandbox.apply-for-teacher-training.service.gov.uk/api/v1
- description: Production
  url: https://www.apply-for-teacher-training.service.gov.uk/api/v1
paths:
  "/applications":
    get:
      tags:
      - Application management
      summary: Get many applications
      description: |
        This endpoint can be used to retrieve applications for the authenticating
        provider. Applications are returned with the most recently updated ones first.

        Use the `since` parameter to limit the number of results. This is intended
        to make it possible to check for new or updated applications regularly.
      parameters:
      - name: since
        description: Include only applications changed or created on or since a date
          and time. Times should be in ISO 8601 format.
        in: query
        required: true
        example: 2019-12-13T12:00:00Z
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: An array of applications
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MultipleApplicationsResponse"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '422':
          "$ref": "#/components/responses/ParameterMissing"
  "/applications/{application_id}":
    get:
      tags:
      - Application management
      summary: Get a single application
      parameters:
      - "$ref": "#/components/parameters/application_id"
      responses:
        '200':
          description: An application
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SingleApplicationResponse"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '404':
          "$ref": "#/components/responses/NotFound"
        '422':
          "$ref": "#/components/responses/UnprocessableEntity"
  "/applications/{application_id}/offer":
    post:
      tags:
      - Application management
      summary: Make an offer
      description: |
        Make an offer to the candidate.

        This will transition the application to the [offer state](/api-docs/lifecycle#offer).

        If the application has already received an offer, POSTing a second offer will change that offer.

        The replacement offer must be for a different course to that originally offered.
      parameters:
      - "$ref": "#/components/parameters/application_id"
      requestBody:
        description: |
          The conditions of the offer

          Providing a request body with an array of conditions is equivalent to making a **conditional** offer.
          For an **unconditional** offer, provide an empty array.

          You can provide an optional `course` object if you wish to suggest a different course code, location, or year of entry.
        content:
          application/json:
            schema:
              type: object
              required:
                - data
                - meta
              properties:
                data:
                  "$ref": "#/components/schemas/MakeOffer"
                meta:
                  "$ref": "#/components/schemas/MetaData"
      responses:
        '200':
          description: An application
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SingleApplicationResponse"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '404':
          "$ref": "#/components/responses/NotFound"
        '422':
          "$ref": "#/components/responses/UnprocessableEntity"
  "/applications/{application_id}/confirm-enrolment":
    post:
      tags:
      - Application management
      summary: Confirm enrolment (DEPRECATED)
      description: |
        This endpoint has been deprecated and will return the application without changing it.

        There is currently no meaning to "enrolment" in Apply for teacher training.
      parameters:
      - "$ref": "#/components/parameters/application_id"
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              required:
                - meta
              type: object
              properties:
                meta:
                  "$ref": "#/components/schemas/MetaData"
      responses:
        '200':
          description: An application
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SingleApplicationResponse"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '404':
          "$ref": "#/components/responses/NotFound"
        '422':
          "$ref": "#/components/responses/UnprocessableEntity"
  "/applications/{application_id}/confirm-conditions-met":
    post:
      tags:
      - Application management
      summary: Confirm offer conditions
      description: |
        Confirm that the candidate has met all the conditions set out in the offer

        This will transition the application to the [recruited state](/api-docs/lifecycle#recruited).
      parameters:
      - "$ref": "#/components/parameters/application_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - meta
              properties:
                meta:
                  "$ref": "#/components/schemas/MetaData"
      responses:
        '200':
          description: An application
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SingleApplicationResponse"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '404':
          "$ref": "#/components/responses/NotFound"
        '422':
          "$ref": "#/components/responses/UnprocessableEntity"
  "/applications/{application_id}/conditions-not-met":
    post:
      tags:
      - Application management
      summary: Conditions not met
      description: |
        The candidate has not met all the conditions set out in the offer.

        This will transition the application to the [conditions\_not\_met state](/api-docs/lifecycle#conditions_not_met).
      parameters:
      - "$ref": "#/components/parameters/application_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - meta
              properties:
                meta:
                  "$ref": "#/components/schemas/MetaData"
      responses:
        '200':
          description: An application
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SingleApplicationResponse"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '404':
          "$ref": "#/components/responses/NotFound"
        '422':
          "$ref": "#/components/responses/UnprocessableEntity"
  "/applications/{application_id}/reject":
    post:
      tags:
      - Application management
      summary: Reject application
      description: |
        Reject the candidate’s application with a reason.

        This will transition the application to the [rejected state](/api-docs/lifecycle#rejected).
      parameters:
      - "$ref": "#/components/parameters/application_id"
      requestBody:
        description: The reason for rejection or offer withdrawal
        content:
          application/json:
            schema:
              type: object
              required:
                - meta
                - data
              properties:
                data:
                  "$ref": "#/components/schemas/Rejection"
                meta:
                  "$ref": "#/components/schemas/MetaData"
      responses:
        '200':
          description: An application
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SingleApplicationResponse"
        '401':
          "$ref": "#/components/responses/Unauthorized"
        '404':
          "$ref": "#/components/responses/NotFound"
        '422':
          "$ref": "#/components/responses/UnprocessableEntity"
  "/reference-data/gcse-subjects":
    get:
      tags:
      - Reference data
      responses:
        '200':
          description: An array of possible GCSE subjects. Candidates are offered these in an autocomplete when filling in the form, but are also able to provide free-text responses.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListResponse"
  "/reference-data/gcse-grades":
    get:
      tags:
      - Reference data
      responses:
        '200':
          description: An array of possible GCSE grades including double-award grades.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListResponse"
  "/reference-data/a-and-as-level-subjects":
    get:
      tags:
      - Reference data
      responses:
        '200':
          description: An array of possible A and AS level subjects. Candidates are offered these in an autocomplete when filling in the form, but are also able to provide free-text responses.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListResponse"
  "/reference-data/a-and-as-level-grades":
    get:
      tags:
      - Reference data
      responses:
        '200':
          description: An array of possible A and AS level grades.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListResponse"
  "/test-data/regenerate":
    post:
      tags:
      - Testing
      summary: Regenerate test data (DEPRECATED)
      description: |
        This endpoint has been deprecated and will return an error. Please use `/test-data/clear` and `/test-data/generate`.
      parameters:
      - name: count
        description: How many items to generate (max 100)
        in: query
        schema:
          type: integer
      deprecated: true
      responses:
        '200':
          "$ref": "#/components/responses/OK"
        '401':
          "$ref": "#/components/responses/Unauthorized"
components:
  responses:
    OK:
      description: Successful response
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/OkResponse"
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/NotFoundResponse"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/UnauthorizedResponse"
    ParameterMissing:
      description: A required URL parameter was empty or missing
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ParameterMissingResponse"
    UnprocessableEntity:
      description: Returned when the request body was missing data or contained invalid
        data
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/UnprocessableEntityResponse"
  schemas:
    MultipleApplicationsResponse:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Application"
    SingleApplicationResponse:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/Application"
    Application:
      type: object
      additionalProperties: false
      required:
      - id
      - type
      - attributes
      properties:
        id:
          type: string
          description: The unique ID of this application. This identifies an application to a single course, also known as an application choice. Candidates can submit up to three application choices at a time.
          maxLength: 10
          example: 11fc0d3b2f
        type:
          type: string
          description: Type of the object, always "application"
          enum:
          - application
          example: application
        attributes:
          "$ref": "#/components/schemas/ApplicationAttributes"
    ApplicationAttributes:
      type: object
      additionalProperties: false
      required:
      - support_reference
      - candidate
      - phase
      - contact_details
      - course
      - offer
      - personal_statement
      - interview_preferences
      - qualifications
      - references
      - rejection
      - status
      - submitted_at
      - updated_at
      - reject_by_default_at
      - recruited_at
      - withdrawal
      - further_information
      - work_experience
      - safeguarding_issues_status
      - safeguarding_issues_details_url
      properties:
        support_reference:
          type: string
          description: The candidate’s reference number for their application form carrying this application choice in the Apply system. Candidates can have multiple application forms. For instance, when a candidate moves from Apply 1 to Apply again their candidate ID will stay the same, but that’s a new application form so the `support_reference` will be different.
          maxLength: 10
          example: AB1234
        status:
          type: string
          description: |
            The status of this application. Refer to the [application
            lifecycle diagram](/api-docs/lifecycle) for states and transitions.
          enum:
          - awaiting_provider_decision
          - conditions_not_met
          - declined
          - offer
          - pending_conditions
          - recruited
          - rejected
          - withdrawn
          example: awaiting_provider_decision
        phase:
          type: string
          description: |
            The phase of this application. In the first phase, "Apply 1", the
            candidate can choose up to 3 courses. If all of those choices are rejected,
            declined, or withdrawn, the user can go into "Apply 2". This means
            they can choose 1 course at a time.
          enum:
          - apply_1
          - apply_2
          example: apply_1
        submitted_at:
          type: string
          format: date-time
          description: Time of submission
          example: 2019-06-13T10:44:31Z
        updated_at:
          type: string
          format: date-time
          description: Time of last change
          example: 2019-06-13T10:44:31Z
        reject_by_default_at:
          type: string
          format: date-time
          nullable: true
          description: Time when the application is due to be rejected by default
          example: 2019-06-13T23:59:59Z
        recruited_at:
          type: string
          format: date-time
          nullable: true
          description: When the candidate met their conditions, receiving a firm place on the course
          example: 2019-06-13T23:59:59Z
        personal_statement:
          type: string
          maxLength: 10240
          description: The candidate’s personal statement, combined from the "Becoming
            a Teacher" and "Subject Knowledge" fields in the application form
          example: Since retiring from the Police Service in 2007...
        interview_preferences:
          type: string
          maxLength: 10240
          description: The candidate’s interview needs
          example: I cannot come to interview on Thursdays
        candidate:
          "$ref": "#/components/schemas/Candidate"
        contact_details:
          "$ref": "#/components/schemas/ContactDetails"
        course:
          "$ref": "#/components/schemas/Course"
        qualifications:
          "$ref": "#/components/schemas/Qualifications"
        work_experience:
          "$ref": "#/components/schemas/WorkExperiences"
        references:
          type: array
          items:
            "$ref": "#/components/schemas/Reference"
        offer:
          anyOf:
          - "$ref": "#/components/schemas/Offer"
          nullable: true
        withdrawal:
          anyOf:
          - "$ref": "#/components/schemas/Withdrawal"
          nullable: true
        rejection:
          anyOf:
          - "$ref": "#/components/schemas/Rejection"
          nullable: true
        hesa_itt_data:
          anyOf:
          - "$ref": "#/components/schemas/HESAITTData"
          nullable: true
          description: Values to populate this candidate’s HESA Initial Teacher
            Training data return.  Available once an offer has been accepted.
        further_information:
          type: string
          maxLength: 10240
          nullable: true
          description: Other personal or professional issues relevant to the application
            which are not covered in the form
          example: I am expecting to be called for jury service in the next 12 months
        safeguarding_issues_status:
          type: string
          description: Status of candidate’s response to the safeguarding issues declaration
          enum:
          - no_safeguarding_issues_to_declare
          - has_safeguarding_issues_to_declare
          - never_asked
          example: has_safeguarding_issues_to_declare
        safeguarding_issues_details_url:
          type: string
          description: URL to Apply system where safeguarding issues disclosed by the candidate can be access by users with permissions to view safeguarding information.
          example: https://apply-for-teacher-training.service.gov.uk/provider/applications/1#criminal-convictions-and-professional-misconduct
          nullable: true
    Candidate:
      type: object
      additionalProperties: false
      required:
      - id
      - first_name
      - last_name
      - date_of_birth
      - nationality
      - domicile
      - uk_residency_status
      - fee_payer
      - english_main_language
      - english_language_qualifications
      - other_languages
      - disability_disclosure
      properties:
        id:
          type: string
          description: The candidate’s unique ID in the Apply system.
          maxLength: 10
          example: C5432
        first_name:
          type: string
          description: The candidate’s first name
          maxLength: 60
          example: Boris
        last_name:
          type: string
          description: The candidate’s last name
          example: Brown
          maxLength: 60
        date_of_birth:
          type: string
          format: date
          description: The candidate’s date of birth
          example: "1985-02-13"
        nationality:
          type: array
          items:
            type: string
            pattern: "^[A-Z]{2}$"
            example: NL
          maxItems: 5
          description: One or more ISO 3166-2 country codes
        domicile:
          type: string
          maxLength: 2
          description: The candidate’s domicile, extracted from their address. Coded according to [the HESA DOMICILE field](https://www.hesa.ac.uk/collection/c20051/a/domicile).
          example: XF
        uk_residency_status:
          type: string
          maxLength: 256
          description: The candidate’s UK residency status indicating their right to work and study in the UK. Possible values include "UK Citizen", "Irish Citizen" and "Candidate needs to apply for permission to work and study in the UK". The candidate can also provide details as free text for example "Settled status".
          example: UK Citizen
        uk_residency_status_code:
          type: string
          maxLength: 1
          description: |
            Single alphabetical character code for the candidate’s UK residency status indicating their right to work and study in the UK:

            - A - UK Citizen
            - B - Irish Citizen
            - C - Candidate needs to apply for permission to work and study in the UK
            - D - Candidate's free text response

            These values do not correspond to the UCAS residency statuses.
          example: 'B'
          enum:
            - 'A'
            - 'B'
            - 'C'
            - 'D'
        fee_payer:
          type: string
          maxLength: 2
          description: Provisional fee payer status based on a candidate's nationality, residency status and domicile.
          example: '02'
          enum:
          - '02'
          - '99'
        english_main_language:
          type: boolean
          description: Does this candidate have English as a main language?
          example: true
        english_language_qualifications:
          type: string
          maxLength: 10240
          nullable: true
          description: Details of this candidate's English language qualification, if English is not their main language
          example: 'Name: TOEFL, Grade: 20, Awarded: 1999'
        other_languages:
          type: string
          maxLength: 10240
          nullable: true
          description: Details of the candidate’s fluency in other languages
          example: I am bilingual in Finnish and English
        disability_disclosure:
          type: string
          maxLength: 10240
          nullable: true
          description: Voluntary disclosure of disabliity or SEN so providers can
            provide appropriate support
          example: I am dyslexic
    ContactDetails:
      type: object
      additionalProperties: false
      required:
      - address_line1
      - country
      - email
      - phone_number
      properties:
        address_line1:
          type: string
          description: The candidate’s address line 1
          maxLength: 50
          example: 45 Dialstone Lane
        address_line2:
          type: string
          description: The candidate’s address line 2
          maxLength: 50
          example: Stockport
          nullable: true
        address_line3:
          type: string
          description: The candidate’s address line 3
          maxLength: 50
          example: Greater Manchester
          nullable: true
        address_line4:
          type: string
          description: The candidate’s address line 4
          maxLength: 50
          example: England
          nullable: true
        postcode:
          type: string
          description: The candidate’s postcode
          maxLength: 8
          example: SK2 6AA
          nullable: true
        country:
          type: string
          maxLength: 2
          description: The candidate’s country - ISO 3166-2 country code
          pattern: "^[A-Z]{2}$"
          example: GB
        email:
          type: string
          description: The candidate’s email address
          maxLength: 100
          example: boris.brown@example.com
        phone_number:
          type: string
          description: The candidate’s phone number
          maxLength: 50
          example: "07700 900000"
    Course:
      type: object
      additionalProperties: false
      required:
      - recruitment_cycle_year
      - provider_code
      - course_code
      - site_code
      - study_mode
      properties:
        recruitment_cycle_year:
          type: integer
          description: The course’s recruitment cycle year
          example: 2020
        provider_code:
          type: string
          description: The provider’s code
          example: 2FR
          maxLength: 3
        course_code:
          type: string
          description: The course’s code
          example: 3CVK
          maxLength: 4
        site_code:
          type: string
          description: The site’s code
          example: K
          maxLength: 5
        study_mode:
          type: string
          description: Can be `full_time` or `part_time`
          example: full_time
          enum:
          - full_time
          - part_time
        start_date:
          type: string
          description: |
            ISO8601 month and year indicating when this course starts. Including this field in a POST has no effect because courses are unambiguously identified by the rest of the properties in this object.
          example: '2021-01'
    Offer:
      type: object
      additionalProperties: false
      required:
      - conditions
      - course
      - offer_made_at
      - offer_accepted_at
      - offer_declined_at
      properties:
        conditions:
          type: array
          items:
            type: string
            maxLength: 256
          description: The conditions of the offer
          maxItems: 20
          example:
          - Completion of subject knowledge enhancement
          - Completion of professional skills test
        course:
          "$ref": "#/components/schemas/Course"
        offer_made_at:
          type: string
          format: date-time
          description: Date and time the offer was made
          example: 2019-09-18T15:33:49.216Z
        offer_accepted_at:
          type: string
          format: date-time
          description: Date and time the offer was accepted
          example: 2019-09-18T15:33:49.216Z
          nullable: true
        offer_declined_at:
          type: string
          format: date-time
          description: Date and time the offer was declined
          example: 2019-09-18T15:33:49.216Z
          nullable: true
    MakeOffer:
      type: object
      additionalProperties: false
      required:
      - conditions
      properties:
        conditions:
          type: array
          items:
            type: string
            maxLength: 256
          description: The conditions of the offer
          maxItems: 20
          example:
          - Completion of subject knowledge enhancement
          - Completion of professional skills test
        course:
          description: An optional `course` that you wish to suggest to the candidate.
          anyOf:
          - "$ref": "#/components/schemas/Course"
    Qualification:
      type: object
      additionalProperties: false
      required:
      - id
      - qualification_type
      - non_uk_qualification_type
      - subject
      - subject_code
      - grade
      - start_year
      - award_year
      - institution_details
      - equivalency_details
      - awarding_body
      - hesa_degtype
      - hesa_degsbj
      - hesa_degclss
      - hesa_degest
      - hesa_degctry
      - hesa_degstdt
      - hesa_degenddt
      properties:
        id:
          type: integer
          description: The unique qualification ID in the Apply system
          example: 123
        qualification_type:
          type: string
          maxLength: 256
          description: The qualification awarded
          example: BA
        non_uk_qualification_type:
          nullable: true
          type: string
          maxLength: 256
          description: For a qualification of type non_uk, this field will contain a free-text description of the qualification type
          example: High School Diploma
        subject:
          type: string
          description: The subject studied
          maxLength: 256
          example: History and Politics
        subject_code:
          type: string
          description: The HECoS code for the subject studied, if available
          example: 100403
          nullable: true
        grade:
          type: string
          maxLength: 256
          description: The grade awarded. e.g. "2:1" for university degrees, "A" for GCSE, "BA*" for double-award science, or "ABC" for triple-award science. For triple-award science, which is the only possible value with three grades, the grades are in the order Biology, Physics, Chemistry.
          example: "AA*B"
        start_year:
          type: string
          nullable: true
          maxLength: 4
          description: The year the candidate started qualification
          example: "1989"
        award_year:
          type: string
          maxLength: 4
          description: The year the award was made
          example: "1992"
        institution_details:
          type: string
          description: Details about the institution and awarding body
          maxLength: 256
          example: University of Huddersfield
          nullable: true
        equivalency_details:
          type: string
          description: Details of equivalency, if this qualification was awarded overseas
          example: 'Enic: 4000123456 - Between GCSE and GCSE AS Level - Equivalent to GCSE C'
          maxLength: 256
          nullable: true
        awarding_body:
          type: string
          description: 'Details about the qualification awarding body. DEPRECATED: this field will always be null as Apply does not collect this information.'
          deprecated: true
          maxLength: 256
          nullable: true
        hesa_degtype:
          type: string
          description: HESA code for degree type
          example: '001'
          maxLength: 20
          nullable: true
        hesa_degsbj:
          type: string
          description: HESA code for degree subject
          example: '100048'
          maxLength: 20
          nullable: true
        hesa_degclss:
          type: string
          description: HESA code for degree class
          example: '01'
          maxLength: 20
          nullable: true
        hesa_degest:
          type: string
          description: HESA code for degree establishment
          example: '0002'
          maxLength: 20
          nullable: true
        hesa_degctry:
          type: string
          description: HESA code for degree country
          example: XF
          maxLength: 2
          nullable: true
        hesa_degstdt:
          type: string
          description: Degree start date in ISO8601 format
          format: date-time
          example: 2019-09-18T15:33:49.216Z
          nullable: true
        hesa_degenddt:
          type: string
          description: Degree end date in ISO8601 format
          format: date-time
          example: 2019-09-18T15:33:49.216Z
          maxLength: 10
          nullable: true
    Reference:
      type: object
      additionalProperties: false
      required:
      - id
      - name
      - email
      - relationship
      - reference
      - referee_type
      - safeguarding_concerns
      properties:
        id:
          type: integer
          description: A unique reference ID
          example: 4321
        name:
          type: string
          description: The referee’s name
          maxLength: 200
          example: Julia Wild
        email:
          type: string
          description: The referee’s email
          maxLength: 100
          example: julia@example.com
        relationship:
          type: string
          description: |
            The candidate’s description of their relationship with the referee
          maxLength: 10240
          example: Julia was my mentor at Cheadle Hulme High
        reference:
          type: string
          description: The reference content provided by the referee.
          maxLength: 10240
          example: Boris is committed to the profession of teaching...
        safeguarding_concerns:
          type: boolean
          description: |
            Whether the referee flagged safeguarding concerns about this candidate
          example: true
        referee_type:
          description: |
            The referee’s relationship to the candidate
          type: string
          example: professional
          enum:
          - academic
          - professional
          - school_based
          - character
    Rejection:
      type: object
      additionalProperties: false
      required:
      - reason
      - date
      properties:
        reason:
          type: string
          description: The reason for rejection or offer withdrawal. If none are yet provided for an application rejected by default, the value `Not entered` is returned
          maxLength: 65535
          example: Does not meet minimum GCSE requirements
        date:
          type: string
          format: date-time
          description: Time of the rejection or offer withdrawal
          example: 2019-09-18T15:33:49.216Z
    Withdrawal:
      type: object
      additionalProperties: false
      required:
      - reason
      - date
      properties:
        reason:
          type: string
          description: Optional. The candidate’s reason for withdrawing. This field is deprecated because the Apply service does not collect this information
          maxLength: 10240
          nullable: true
          deprecated: true
        date:
          type: string
          format: date-time
          description: Time of the withdrawal
          example: 2019-09-18T15:33:49.216Z
    Qualifications:
      type: object
      additionalProperties: false
      required:
      - gcses
      - degrees
      - other_qualifications
      - missing_gcses_explanation
      properties:
        gcses:
          type: array
          items:
            "$ref": "#/components/schemas/Qualification"
        degrees:
          type: array
          items:
            "$ref": "#/components/schemas/Qualification"
        other_qualifications:
          type: array
          items:
            "$ref": "#/components/schemas/Qualification"
        missing_gcses_explanation:
          type: string
          nullable: true
          maxLength: 10240
          description: If the candidate lacks any required GCSEs, this field will
            contain their free-text explanation of why this is the case.
          example: "Maths GCSE or equivalent: I will take Maths GCSE at my local training
            provider on 18th August 2020"
    WorkExperiences:
      type: object
      additionalProperties: false
      required:
      - jobs
      - volunteering
      - work_history_break_explanation
      properties:
        jobs:
          type: array
          description: The candidate’s professional experience
          items:
            "$ref": "#/components/schemas/WorkExperience"
        volunteering:
          type: array
          description: The candidate’s experience as a volunteer
          items:
            "$ref": "#/components/schemas/WorkExperience"
        work_history_break_explanation:
          type: string
          nullable: true
          description: The candidate’s explanation for any breaks in work history.
            Will be null if there are not any breaks in the candidate’s work history.
            We define a break in work history as more than a month between 2 jobs.
          maxLength: 10240
          example: I spent time volunteering overseas...
    WorkExperience:
      type: object
      additionalProperties: false
      required:
      - id
      - organisation_name
      - start_date
      - end_date
      - role
      - description
      - working_with_children
      - commitment
      properties:
        id:
          type: integer
          description: The work experience ID in the Apply system
          example: 12345
        organisation_name:
          type: string
          description: The organisation worked for
          maxLength: 256
          example: Cheadle Hulme High School
        start_date:
          type: string
          format: date
          description: The date the position began
          example: "2020-09-01"
        end_date:
          type: string
          format: date
          nullable: true
          description: The date the position finished, if applicable
          example: "2019-04-01"
        role:
          type: string
          description: The position held by the candidate
          maxLength: 256
          example: Whole School Literacy Specialist
        description:
          type: string
          description: A written description of the work involved
          maxLength: 10240
          example: I lead, develop and enhance the literacy teaching practice of others...
        working_with_children:
          type: boolean
          description: Did this position involve working in a school or with children?
          example: true
        commitment:
          nullable: true
          description: Whether the work was full time or part time
          type: string
          example: full_time
          enum:
          - full_time
          - part_time
    HESAITTData:
      type: object
      additionalProperties: false
      description: |
        Information required by HESA for the Initial Teacher Training data
        return.
      required:
      - sex
      - disability
      - ethnicity
      properties:
        sex:
          type: string
          nullable: true
          description: The candidate’s sex as a [1-digit HESA code for Sex](https://www.hesa.ac.uk/collection/c19053/e/sexid)
          example: "1"
          enum:
          - "1"
          - "2"
          - "3"
        disability:
          nullable: true
          type: array
          items:
            type: string
          description: The candidate’s disabilities as an array of [2-digit HESA codes for Disability](https://www.hesa.ac.uk/collection/c19053/e/disable)
          example:
            - "00"
            - "51"
          enum:
          - "00"
          - "08"
          - "51"
          - "53"
          - "54"
          - "55"
          - "56"
          - "57"
          - "58"
          - "96"
        ethnicity:
          type: string
          nullable: true
          description: The candidate’s ethnicity as [a 2-digit HESA code for Ethnicity](https://www.hesa.ac.uk/collection/c19053/e/ethnic)
          example: "10"
          enum:
          - "10"
          - "15"
          - "21"
          - "22"
          - "29"
          - "31"
          - "32"
          - "33"
          - "34"
          - "39"
          - "41"
          - "42"
          - "43"
          - "49"
          - "50"
          - "80"
          - "90"
          - "98"
        other_disability_details:
          type: string
          nullable: true
          description: The candidate’s description of their disability, if they selected “Other” and entered a value. This corresponds to HESA disability code `96`.
          example: "My disability is..."
        other_ethnicity_details:
          type: string
          nullable: true
          description: The candidate’s description of their ethnicity, if they selected “Other” and entered a value.
          example: "My ethnicity is..."
    Attribution:
      type: object
      additionalProperties: false
      required:
      - full_name
      - email
      - user_id
      properties:
        full_name:
          type: string
          description: The full name of the user who made this update
          maxLength: 120
          example: Jane Smith
        email:
          type: string
          description: The email address of the user who made this update
          maxLength: 100
          example: jane.smith@example.com
        user_id:
          type: string
          description: The ID of the user in the Student Record System, used for disambiguation
          maxLength: 100
          example: "12345"
    MetaData:
      type: object
      description: Required under a ‘meta’ key in the body of every POST or PUT request
      additionalProperties: false
      required:
      - attribution
      - timestamp
      properties:
        attribution:
          "$ref": "#/components/schemas/Attribution"
        timestamp:
          type: string
          description: The time this update was made
          format: date-time
          example: 2019-06-13T23:59:59Z
    Error:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Name of the current error
          example: Unauthorized
        message:
          type: string
          description: Description of the current error
          example: Please provide a valid authentication token
      required:
      - error
      - message
    NotFoundResponse:
      type: object
      required:
      - errors
      properties:
        errors:
          type: array
          minItems: 1
          description: Error objects describing the problem
          items:
            "$ref": "#/components/schemas/Error"
          example:
          - error: NotFound
            message: Unable to find Application(s)
    UnauthorizedResponse:
      type: object
      required:
      - errors
      properties:
        errors:
          type: array
          minItems: 1
          description: Error objects describing the problem
          items:
            "$ref": "#/components/schemas/Error"
          example:
          - error: Unauthorized
            message: Please provide a valid authentication token
    ParameterMissingResponse:
      type: object
      required:
      - errors
      properties:
        errors:
          type: array
          minItems: 1
          description: Error objects describing the problem
          items:
            "$ref": "#/components/schemas/Error"
          example:
          - error: ParameterMissing
            message: "param is missing or the value is empty: parameter_name"
    UnprocessableEntityResponse:
      type: object
      required:
      - errors
      properties:
        errors:
          type: array
          description: Error objects describing the problem
          minItems: 1
          items:
            "$ref": "#/components/schemas/Error"
          example:
          - error: UnprocessableEntity
            message: A ‘meta’ key was not included on the request body
    OkResponse:
      type: object
      required:
      - data
      properties:
        data:
          type: object
          required:
          - message
          properties:
            message:
              type: string
              example: OK
    ListResponse:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            type: string
  parameters:
    application_id:
      name: application_id
      in: path
      required: true
      description: The unique ID of this application
      schema:
        type: string
        maxLength: 10
  securitySchemes:
    tokenAuth:
      type: http
      scheme: bearer
security:
- tokenAuth: []
